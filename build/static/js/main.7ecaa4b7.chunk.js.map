{"version":3,"sources":["components/card/images sync /^/.//.*/.jpg$","components/card/images/1.jpg","components/card/images/10.jpg","components/card/images/2.jpg","components/card/images/3.jpg","components/card/images/4.jpg","components/card/images/5.jpg","components/card/images/6.jpg","components/card/images/7.jpg","components/card/images/8.jpg","components/card/images/9.jpg","components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","serviceWorker.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","Card","props","className","src","require","house","alt","width","height","name","price","CardList","houses","key","SearchBox","placeholder","handleChange","type","onChange","App","setState","searchField","target","value","state","fetch","then","response","json","data","housesdb","this","filteredHouses","filter","toLowerCase","includes","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"yMAAA,IAAIA,EAAM,CACT,UAAW,GACX,WAAY,GACZ,UAAW,GACX,UAAW,GACX,UAAW,GACX,UAAW,GACX,UAAW,GACX,UAAW,GACX,UAAW,GACX,UAAW,IAIZ,SAASC,EAAeC,GACvB,IAAIC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,GAE5B,SAASC,EAAsBF,GAC9B,IAAIG,EAAoBC,EAAEN,EAAKE,GAAM,CACpC,IAAIK,EAAI,IAAIC,MAAM,uBAAyBN,EAAM,KAEjD,MADAK,EAAEE,KAAO,mBACHF,EAEP,OAAOP,EAAIE,GAEZD,EAAeS,KAAO,WACrB,OAAOC,OAAOD,KAAKV,IAEpBC,EAAeW,QAAUR,EACzBS,EAAOC,QAAUb,EACjBA,EAAeE,GAAK,I,gBC/BpBU,EAAOC,QAAU,IAA0B,+B,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,+B,gBCA3CD,EAAOC,QAAU,IAA0B,+B,gBCA3CD,EAAOC,QAAU,IAA0B,+B,gBCA3CD,EAAOC,QAAU,IAA0B,+B,gBCA3CD,EAAOC,QAAU,IAA0B,+B,gBCA3CD,EAAOC,QAAU,IAA0B,+B,gBCA3CD,EAAOC,QAAU,IAA0B,+B,gBCA3CD,EAAOC,QAAU,IAA0B,+B,8HCG9BC,G,kBAAO,SAACC,GAAD,OAChB,yBAAKC,UAAU,kBACf,yBACAC,IAAKC,MAAQ,YAA8EH,EAAMI,MAAMjB,GAA3F,SACZkB,IAAI,SACJC,MAAO,MACPC,OAAO,SAEP,gCAAMP,EAAMI,MAAMI,KAAlB,KACA,gCAAMR,EAAMI,MAAMK,MAAlB,QCRSC,EAAW,SAAAV,GAAK,OACzB,yBAAKC,UAAU,aACdD,EAAMW,OAAO3B,KAAI,SAAAoB,GAAK,OACnB,kBAAC,EAAD,CAAMQ,IAAKR,EAAMjB,GAAIiB,MAAOA,SCJvBS,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACrB,2BACAd,UAAU,SACRe,KAAK,SACLF,YAAcA,EACdG,SAAUF,MCmCDG,E,kDArCb,aAAc,IAAD,8BACX,gBAcFH,aAAe,SAACxB,GACd,EAAK4B,SAAS,CAACC,YAAa7B,EAAE8B,OAAOC,SAbrC,EAAKC,MAAQ,CACXZ,OAAQ,GACRS,YAAa,IALJ,E,gEASO,IAAD,OACjBI,MAAM,gEACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAI,EAAKT,SAAS,CAACR,OAAQiB,EAAKC,gB,+BAOlC,IAAD,EACyBC,KAAKP,MAA7BZ,EADD,EACCA,OAAQS,EADT,EACSA,YACVW,EAAiBpB,EAAOqB,QAAO,SAAA5B,GAAK,OACxCA,EAAMI,KAAKyB,cAAcC,SAASd,EAAYa,kBAEhD,OACE,yBAAKhC,UAAU,OACf,2DACA,kBAAC,EAAD,CACAa,YAAY,oBACZC,aAAce,KAAKf,eAEnB,kBAAC,EAAD,CAAUJ,OAAQoB,S,GAhCNI,aCOEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBvB,MAAK,SAAAwB,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.7ecaa4b7.chunk.js","sourcesContent":["var map = {\n\t\"./1.jpg\": 17,\n\t\"./10.jpg\": 18,\n\t\"./2.jpg\": 19,\n\t\"./3.jpg\": 20,\n\t\"./4.jpg\": 21,\n\t\"./5.jpg\": 22,\n\t\"./6.jpg\": 23,\n\t\"./7.jpg\": 24,\n\t\"./8.jpg\": 25,\n\t\"./9.jpg\": 26\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 16;","module.exports = __webpack_public_path__ + \"static/media/1.8a072618.jpg\";","module.exports = __webpack_public_path__ + \"static/media/10.11c822d5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/2.97daba23.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3.d1784713.jpg\";","module.exports = __webpack_public_path__ + \"static/media/4.81caf4b3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/5.aa76a2af.jpg\";","module.exports = __webpack_public_path__ + \"static/media/6.b95ed1ff.jpg\";","module.exports = __webpack_public_path__ + \"static/media/7.e3ddb8b0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/8.b826d505.jpg\";","module.exports = __webpack_public_path__ + \"static/media/9.a6f9aa3a.jpg\";","import React from 'react';\nimport './card.style.css'\n\nexport const Card = (props) => (\n    <div className='card-container'> \n    <img \n    src={require(`/Users/karenhernandeze/Desktop/WRSP-FB/web_page/src/components/card/images/${props.house.id}.jpg`)}\n    alt=\"Houses\"\n    width= '192'\n    height='93.2'\n    />\n    <h2> {props.house.name} </h2>\n    <h3> {props.house.price} </h3>\n    </div>\n)","import React from \"react\";\nimport './card-list.style.css';\nimport {Card} from '../card/card.component';\n\nexport const CardList = props => (\n    <div className='card-list'> \n    {props.houses.map(house => (\n        <Card key={house.id} house={house}/>\n      ))}\n    </div>\n);","import React from 'react';\nimport './search-box.style.css';\n\nexport const SearchBox = ({ placeholder, handleChange }) => (\n    <input \n    className='search'\n      type='search' \n      placeholder= {placeholder}\n      onChange={handleChange}>\n      </input>\n)","import React, { Component } from 'react';\nimport './App.css';\nimport { CardList } from './components/card-list/card-list.component';\nimport {SearchBox } from './components/search-box/search-box.component';\n\nclass App extends Component {\n  constructor(){\n    super();\n\n    this.state = {\n      houses: [],\n      searchField: ''\n    };\n  }\n\n  componentDidMount(){\n    fetch('https://my-json-server.typicode.com/karenhernandeze/Casas/db')\n    .then(response => response.json())\n    .then(data => this.setState({houses: data.housesdb})); //console.log(users));\n  }\n\n  handleChange = (e) => {\n    this.setState({searchField: e.target.value})\n  }\n\n  render() {\n    const { houses, searchField } = this.state;\n    const filteredHouses = houses.filter(house => \n      house.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n    return (\n      <div className=\"App\">\n      <h1> EH ASESORES INMOBILIARIOS </h1>\n      <SearchBox \n      placeholder='Busca un inmueble'\n      handleChange={this.handleChange}\n      />\n      <CardList houses={filteredHouses}/> \n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}